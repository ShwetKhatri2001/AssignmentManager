[{"D:\\Developer Days\\AssignmentManager\\server\\client\\src\\index.js":"1","D:\\Developer Days\\AssignmentManager\\server\\client\\src\\reportWebVitals.js":"2","D:\\Developer Days\\AssignmentManager\\server\\client\\src\\App.js":"3","D:\\Developer Days\\AssignmentManager\\server\\client\\src\\screens\\FileUploadScreen.js":"4","D:\\Developer Days\\AssignmentManager\\server\\client\\src\\data\\api.js":"5"},{"size":500,"mtime":1632251943909,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1632251943946,"results":"8","hashOfConfig":"7"},{"size":5953,"mtime":1632350066865,"results":"9","hashOfConfig":"7"},{"size":4649,"mtime":1632336020841,"results":"10","hashOfConfig":"7"},{"size":1163,"mtime":1632348545750,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1s9kvn0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\Developer Days\\AssignmentManager\\server\\client\\src\\index.js",[],["25","26"],"D:\\Developer Days\\AssignmentManager\\server\\client\\src\\reportWebVitals.js",[],"D:\\Developer Days\\AssignmentManager\\server\\client\\src\\App.js",["27","28","29","30","31","32","33"],"D:\\Developer Days\\AssignmentManager\\server\\client\\src\\screens\\FileUploadScreen.js",["34"],"import React, {useState, useEffect} from 'react';\nimport {singleFileUpload, multipleFilesUpload} from '../data/api';\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nconst FileUploadScreen = (props) => {\n    const [singleFile, setSingleFile] = useState('');\n    const [multipleFiles, setMultipleFiles] = useState('');\n    const [title, setTitle] =  useState('');\n    const [singleProgress, setSingleProgress] = useState(0);\n    const [multipleProgress, setMultipleProgress] = useState(0);\n\n    const SingleFileChange = (e) => {\n        setSingleFile(e.target.files[0]);\n        setSingleProgress(0);\n    }\n    const MultipleFileChange = (e) => {\n        setMultipleFiles(e.target.files);\n        setMultipleProgress(0);\n    }\n    const singleFileOptions = {\n        onUploadProgress: (progressEvent) => {\n            const {loaded, total} = progressEvent;\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n            setSingleProgress(percentage);\n        }\n    }\n    const mulitpleFileOptions = {\n        onUploadProgress: (progressEvent) => {\n            const {loaded, total} = progressEvent;\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\n            setMultipleProgress(percentage);\n        }\n    }\n    const uploadSingleFile = async () => {\n        const formData = new FormData();\n        formData.append('file', singleFile);\n        await singleFileUpload(formData, singleFileOptions);\n        props.getsingle();\n    }\n    const UploadMultipleFiles = async () => {\n        const formData = new FormData();\n        formData.append('title', title);\n        for (let i = 0; i < multipleFiles.length; i++) {\n            formData.append('files', multipleFiles[i]);                      \n        }\n        await multipleFilesUpload(formData, mulitpleFileOptions);\n        props.getMultiple();\n    }\n    return (\n        <>\n            <div className=\"form-control\">\n                <label>Select Single File</label>\n                <input type=\"file\" name=\"file\" onChange={(e) => SingleFileChange(e)} />\n                <i className=\"fas fa-check-circle\"></i>\n      \t \t\t<i className=\"fas fa-exclamation-circle\"></i>\n                <small> Error Msg </small>\n            </div>\n            <div >\n                <button type=\"button\" className=\"btn btn-danger\" onClick={() => uploadSingleFile()} >Upload</button>\n                <CircularProgressbar\n                    value={singleProgress}\n                    text={`${singleProgress}%`}\n                    styles={buildStyles({\n                        rotation: 0.25,\n                        strokeLinecap: 'butt',\n                        textSize: '16px',\n                        pathTransitionDuration: 0.5,\n                        pathColor: `rgba(255, 136, 136, ${singleProgress / 100})`,\n                        textColor: '#f88',\n                        trailColor: '#d6d6d6',\n                        backgroundColor: '#3e98c7',\n                    })}\n                />\n            </div>\n                <div >\n                    <label >Title</label>\n                    <input type=\"text\" onChange={(e) => setTitle(e.target.value) } placeholder=\"enter title for your gallery\" className=\"form-control\"/>\n                </div>\n                <div className=\"form-control\">\n                    <label>Select Multiple Files</label>\n                    <input type=\"file\" name=\"files\" onChange={(e) => MultipleFileChange(e)} multiple />\n                    <i className=\"fas fa-check-circle\"></i>\n                    <i className=\"fas fa-exclamation-circle\"></i>\n                    <small> Error Msg </small>\n                </div>\n\n                <div >\n                    <button type=\"button\" onClick={() => UploadMultipleFiles()}  className=\"btn btn-danger\">Upload</button>\n                </div>\n                <div >\n                <CircularProgressbar\n                    value={multipleProgress}\n                    text={`${multipleProgress}%`}\n                    styles={buildStyles({\n                        rotation: 0.25,\n                        strokeLinecap: 'butt',\n                        textSize: '16px',\n                        pathTransitionDuration: 0.5,\n                        pathColor: `rgba(255, 136, 136, ${multipleProgress / 100})`,\n                        textColor: '#f88',\n                        trailColor: '#d6d6d6',\n                        backgroundColor: '#3e98c7',\n                    })}\n                />\n            </div>\n        </>\n    );\n}\n\nexport default FileUploadScreen;",["35","36"],"D:\\Developer Days\\AssignmentManager\\server\\client\\src\\data\\api.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":26,"nodeType":"43","messageId":"44","endLine":1,"endColumn":35},{"ruleId":"41","severity":1,"message":"45","line":3,"column":75,"nodeType":"43","messageId":"44","endLine":3,"endColumn":89},{"ruleId":"41","severity":1,"message":"46","line":3,"column":91,"nodeType":"43","messageId":"44","endLine":3,"endColumn":107},{"ruleId":"41","severity":1,"message":"47","line":116,"column":16,"nodeType":"43","messageId":"44","endLine":116,"endColumn":22},{"ruleId":"41","severity":1,"message":"48","line":116,"column":24,"nodeType":"43","messageId":"44","endLine":116,"endColumn":29},{"ruleId":"41","severity":1,"message":"47","line":121,"column":18,"nodeType":"43","messageId":"44","endLine":121,"endColumn":24},{"ruleId":"41","severity":1,"message":"48","line":121,"column":26,"nodeType":"43","messageId":"44","endLine":121,"endColumn":31},{"ruleId":"41","severity":1,"message":"42","line":1,"column":26,"nodeType":"43","messageId":"44","endLine":1,"endColumn":35},{"ruleId":"37","replacedBy":"49"},{"ruleId":"39","replacedBy":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'getSingleFiles' is defined but never used.","'getMultipleFiles' is defined but never used.","'loaded' is assigned a value but never used.","'total' is assigned a value but never used.",["51"],["52"],"no-global-assign","no-unsafe-negation"]